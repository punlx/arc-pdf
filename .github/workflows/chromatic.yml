# .github/workflows/chromatic.yml
name: Chromatic visual tests

on:
  #######################################################################
  # 1) ตรวจ UI ตอนเปิด PR → main  (เฉพาะไฟล์ UI เปลี่ยน)
  #######################################################################
  pull_request:
    branches: [main] # เป้า = main
    types: [opened, synchronize, reopened]
    paths:
      - 'src/components/ui/**' # 🔍 เฉพาะ UI component
      # ↳ ถ้ามี story ไว้คนละที่ เพิ่ม pattern เพิ่มได้ เช่น:
      # - '.storybook/**'
      # - 'package.json'
      # - 'yarn.lock'

  #######################################################################
  # 2) ตั้ง baseline ใหม่ทุกครั้งที่ push เข้ากิ่ง main
  #    (จะเกิดขึ้นเมื่อ PR merge) — ใส่ path filter เดียวกันได้
  #######################################################################
  push:
    branches: [main]
    paths:
      - 'src/components/ui/**'

  # 3) ยังสั่งรันมือได้เสมอ
  workflow_dispatch:

jobs:
  chromatic:
    runs-on: ubuntu-latest
    name: Publish to Chromatic 🖼️

    steps:
      # ── 1. Checkout (ต้อง fetch-depth:0 ให้เห็น commit graph) ─────────
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # ── 2. Node + dependency cache ────────────────────────────────────
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn
          cache-dependency-path: yarn.lock

      - run: yarn install --frozen-lockfile

      # ── 3. เรียก Chromatic CLI ผ่าน Action ────────────────────────────
      - name: Run Chromatic
        uses: chromaui/action@latest # pin @v13 ได้ถ้าต้องการ
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}

          # ให้ main รับ snapshot ใหม่เป็น baseline อัตโนมัติ
          autoAcceptChanges: 'main'

          # ถ้ามี diff → ให้ workflow fail (PR ขึ้นแดง)
          exitZeroOnChanges: false

          # อัปโหลดเสร็จแล้วจบ job เลย (เร็วกว่า)
          exitOnceUploaded: true
