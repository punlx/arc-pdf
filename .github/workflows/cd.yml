name: Frontend CI # Build, Unit-test & Interaction-test

on:
  push:
    branches: [main] # รันบน main ทุก push
    paths: ['**'] # repo นี้มีแต่ FE
  pull_request: # รันบนทุก PR
    paths: ['**']
  workflow_dispatch:

jobs:
  build-check:
    runs-on: ubuntu-latest

    steps:
      # ───────────── 1) Clone repo ─────────────
      - uses: actions/checkout@v4

      # ───────────── 2) Setup Node & cache ─────────────
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn
          cache-dependency-path: yarn.lock

      # ───────────── 3) Install deps ─────────────
      - name: Install dependencies
        run: yarn install --frozen-lockfile

      # ───────────── 4) Lint (optional) ─────────────
      # - name: Lint
      #   run: yarn lint

      # ───────────── 5) Unit / Component tests ─────────────
      - name: Unit tests (Vitest)
        run: yarn test # vitest --project=unit

      # ───────────── 6) Install Playwright browsers ─────────────
      - name: Install Playwright browsers
        run: yarn playwright install --with-deps

      # ───────────── 7) Storybook interaction tests ─────────────
      - name: Storybook interaction tests
        run: yarn test:storybook # vitest --project=storybook

      # ───────────── 8) Build production bundle (Vite + TSC) ─────────────
      - name: Build production bundle
        run: yarn build

      # ───────────── 9) Build static Storybook (จับ production break) ─────────────
      - name: Build static Storybook
        run: yarn build-storybook --quiet

      # ───────────── 10) Ensure Dockerfile.prod builds ─────────────
      - name: Docker build (no push)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.prod
          push: false
